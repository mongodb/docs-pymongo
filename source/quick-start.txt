.. uses installation.rst, atlas.rst
.. uses tutorial.rst

.. _pymongo-quickstart:

Quick Start
===========

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: tutorial
 
.. meta::
   :keywords: pypi, pip, xcode

This tutorial is intended as an introduction to working with
**MongoDB** and **PyMongo**.

Download and Install
--------------------

**PyMongo** is in the `Python Package Index.
<http://pypi.python.org/pypi/pymongo/>`__

.. warning::
  
   Do not install the ``bson`` package from PyPI. PyMongo comes
   with its own ``bson`` package. Running ``pip install bson`` or ``easy_install bson``
   installs a third-party package that is incompatible with PyMongo.

Installing with pip
-------------------

We recommend using `pip <http://pypi.python.org/pypi/pip>`__
to install PyMongo on all platforms:

.. code-block:: python

   $ python3 -m pip install pymongo

To get a specific version of PyMongo:

.. code-block:: python

   $ python3 -m pip install pymongo==3.5.1

To upgrade by using pip:

.. code-block:: python

   $ python3 -m pip install --upgrade pymongo

Dependencies
------------

PyMongo supports CPython 3.7+ and PyPy3.7+.

Support for mongodb+srv:// URIs requires `dnspython.
<https://pypi.python.org/pypi/dnspython>`__

Installing from Source
----------------------

If you'd rather install PyMongo directly from the source,
install the C-extension dependencies, and then check out the
latest source from GitHub and install the driver from the resulting tree:

.. code-block:: python

   $ git clone https://github.com/mongodb/mongo-python-driver.git pymongo
   $ cd pymongo/
   $ pip install .

Installing from Source on Unix
``````````````````````````````

To build the optional C extensions on Linux or another non-macOS Unix, you must
have the GNU C compiler (``gcc``) installed. Depending on your flavor of Unix
(or Linux distribution), you may also need a Python development package that
provides the necessary header files for your version of Python. The package
name might vary among distrubutions.

If you're using Debian or Ubuntu, run the following command:

.. code-block:: python

   $ sudo apt-get install build-essential python-dev

If you're using a Red Hat-based distribution (RHEL, CentOS, Amazon Linux, Oracle Linux,
Fedora, etc.), run the following command:

.. code-block:: python

   $ sudo yum install gcc python-devel

Installing from Source on macOS or OSX
``````````````````````````````````````

If you want to install PyMongo with C extensions from source, you will need
the command line developer tools. On modern versions of macOS, you can
install these tools by running the following command in your terminal:

.. code-block:: bash

   xcode-select --install

The following list describes the installation requirements for older versions of OSX:

- **Lion (10.7) and newer**: PyMongo's C extensions can be built against
  versions of Python 3.7+ downloaded from python.org. In all cases, you must install Xcode
  with "UNIX Development Support". 
  
  Starting with Xcode version 5.1, ``clang``
  throws an error when it encounters compiler flags that it doesn't recognize.
  This may cause C extension builds to fail with an error similar to the following:

  .. code-block:: bash

     clang: error: unknown argument: '-mno-fused-madd' [-Wunused-command-line-argument-hard-error-in-future]

  You can run one of the following commands as a workaround:

  .. code-block:: python

     # Apple specified workaround for Xcode 5.1
     # easy_install
     $ ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future easy_install pymongo
     # or pip
     $ ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future pip install pymongo

     # Alternative workaround using CFLAGS
     # easy_install
     $ CFLAGS=-Qunused-arguments easy_install pymongo
     # or pip
     $ CFLAGS=-Qunused-arguments pip install pymongo

- **Snow Leopard (10.6)**: Xcode 3 with "UNIX Development Support".

  The Python versions that shipped with OSX 10.6.x
  are universal binaries. They support i386, PPC, and x86_64 architectures. Xcode 4 removed
  support for PPC, causing the ``distutils`` version shipped with Apple's builds of
  Python to fail to build the C extensions if you have Xcode 4 installed. There
  is a workaround:

  .. code-block:: python

     # For some Python builds from python.org
     $ env ARCHFLAGS='-arch i386 -arch x86_64' python -m easy_install pymongo

  See `http://bugs.python.org/issue11623 <http://bugs.python.org/issue11623>`__
  for a more detailed explanation.

Installing from Source on Windows
`````````````````````````````````

If you want to install PyMongo with C extensions from source,
CPython and ActiveState's ActivePython require Visual Studio 2015 or later.

.. _install-no-c:

Installing Without C Extensions
-------------------------------

By default, PyMongo attempts to build and install optional C
extensions (used for increasing performance) when it is installed. If
any extension fails to build, the driver will still be installed, but a
warning will be printed.

If you wish to install PyMongo without the C extensions, run the following command:

.. code-block:: python

   $ NO_EXT=1 python -m pip install .

Installing a Beta or Release-Candidate Version
----------------------------------------------

MongoDB will occasionally tag a beta or release-candidate version for testing by
the community before final release. These releases will not be uploaded to PyPI, but you
can find them on the `GitHub tags page <https://github.com/mongodb/mongo-python-driver/tags>`__
for PyMongo.

To install one of these versions, pass the full URL for the version as an argument pip,
as follows:

.. code-block:: python

   $ python3 -m pip install https://github.com/mongodb/mongo-python-driver/archive/4.4.0b0.tar.gz

Test Your PyMongo Installation
------------------------------

In the Python shell, the following command should run without raising an exception:

.. code-block:: python

   >>> import pymongo

Create a Deployment
-------------------

Follow the `Install MongoDB
<https://www.mongodb.com/docs/manual/installation/>`__ guide to install MongoDB locally.

Create a Python Application
---------------------------

In your shell, run the following command to create a directory for your application:

.. code-block:: bash

   mkdir python_quickstart

Run the following command to navigate into the project directory:

.. code-block:: bash

   cd python_quickstart

Create a file named ``quickstart.py`` to contain your application, and then copy
the following code into ``quickstart.py``:

.. code-block:: python

   from pymongo import MongoClient

   client = MongoClient()
   client.drop_database("test-database")

In the terminal, run the following command to start your application:

.. code-block:: bash

   python3 quickstart.py

.. note::

   This application has no output, but should return you to the command prompt if
   successful.
   