.. _pymongo-troubleshooting:

Troubleshooting
===============

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :keywords: error, help

.. note:: Troubleshooting TLS Errors
  
   For information about TLS errors you might see when using {+driver-short+}, see the
   :ref:`TLSErrors` section.

Server Reports Wire Version X, PyMongo Requires Y
-------------------------------------------------

When one attempts to connect to a <=3.4 version server, PyMongo will throw the following error:

.. code-block:: python

  >>> client.admin.command('ping')
  ...
  pymongo.errors.ConfigurationError: Server at localhost:27017 reports wire version 5, but this version of PyMongo requires at least 6 (MongoDB 3.6).

This occurs when the driver version is too new for the server it is connecting to.
To resolve this issue, either upgrade your database to version >= 3.6 or downgrade to
PyMongo 3.x which, supports MongoDB >= 2.6.

'Cursor' Object Has No Attribute '_Cursor__killed'
--------------------------------------------------

On versions of PyMongo < 3.9, if you supply invalid arguments to the ``Cursor`` constructor,
the driver will raise a ``TypeError`` and an ``AttributeError`` printed to ``stderr``.
The ``AttributeError`` is not relevant, but the ``TypeError`` contains debugging
information:

.. code-block:: python

   >>> coll.find(wrong=1)
   Exception ignored in: <function Cursor.__del__ at 0x1048129d8>
   ...
   AttributeError: 'Cursor' object has no attribute '_Cursor__killed'
   ...
   TypeError: __init__() got an unexpected keyword argument 'wrong'

To fix this, make sure that you are supplying the correct keyword arguments.
In addition, you can also upgrade to PyMongo >=3.9, which will remove the spurious error.

MongoClient Fails ConfigurationError
------------------------------------

This is a common issue stemming from using incorrect keyword argument names:

.. code-block:: python

   >>> client = MongoClient(wrong=1)
   ...
   pymongo.errors.ConfigurationError: Unknown option wrong

To fix this, check your spelling and make sure that the keyword argument that you are
specifying exists.

DeprecationWarning: Count Is Deprecated
---------------------------------------

PyMongo no longer supports the ``pymongo.cursor.count`` method.
Instead, use the ``pymongo.collection.count_documents`` method:

.. code-block:: python

   >>> client = MongoClient()
   >>> d = datetime.datetime(2009, 11, 12, 12)
   >>> list(client.db.coll.find({"date": {"$lt": d}}, limit=2))
   [{'_id': ObjectId('6247b058cebb8b179b7039f8'), 'date': datetime.datetime(1, 1, 1, 0, 0)}, {'_id': ObjectId('6247b059cebb8b179b7039f9'), 'date': datetime.datetime(1, 1, 1, 0, 0)}]
   >>> client.db.coll.count_documents({"date": {"$lt": d}}, limit=2)
   2

.. important::
  
   The ``pymongo.collection.count_documents`` method belongs to the ``Collection`` class.
   If you attempt to call the nonexistent ``Cursor.count_documents`` method,
   {+driver-short+} will raise the following error:

   .. code-block:: python

      >>> Cursor(MongoClient().db.coll).count()
      Traceback (most recent call last):
        File "<stdin>", line 1, in <module>
      AttributeError: 'Cursor' object has no attribute 'count'

Timeout When Accessing MongoDB from PyMongo with Tunneling
----------------------------------------------------------

If you try to connect to a MongoDB replica set over an SSH tunnel, you
will receive the following error:

.. code-block:: python

   File "/Library/Python/2.7/site-packages/pymongo/collection.py", line 1560, in count
     return self._count(cmd, collation, session)
     File "/Library/Python/2.7/site-packages/pymongo/collection.py", line 1504, in _count
     with self._socket_for_reads() as (connection, slave_ok):
     File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/contextlib.py", line 17, in __enter__
     return self.gen.next()
     File "/Library/Python/2.7/site-packages/pymongo/mongo_client.py", line 982, in _socket_for_reads
     server = topology.select_server(read_preference)
     File "/Library/Python/2.7/site-packages/pymongo/topology.py", line 224, in select_server
     address))
     File "/Library/Python/2.7/site-packages/pymongo/topology.py", line 183, in select_servers
     selector, server_timeout, address)
     File "/Library/Python/2.7/site-packages/pymongo/topology.py", line 199, in _select_servers_loop
     self._error_message(selector))
   pymongo.errors.ServerSelectionTimeoutError: localhost:27017: timed out

This occurs because {+driver-short+} discovers replica set members by using the response
from the ``isMaster`` command, which contains the addresses and ports of the other
replica set members. However, you can't access these addresses and ports through the SSH
tunnel.

Instead, you can connect directly to a single MongoDB node by using the
``directConnection=True`` option with SSH tunneling.