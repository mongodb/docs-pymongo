As python dictionaries don't maintain order you should use ``~bson.son.SON``
or ``collections.OrderedDict`` where explicit ordering is required
eg "$sort":

To run an explain plan for this aggregation use
`PyMongoExplain <https://pypi.org/project/pymongoexplain/>`_,
a companion library for PyMongo. It allows you to explain any CRUD operation
by providing a few convenience classes:

.. code-block:: python

  >>> from pymongoexplain import ExplainableCollection
  >>> ExplainableCollection(collection).aggregate(pipeline)
  {'ok': 1.0, 'queryPlanner': [...]}

Or, use the the ``~pymongo.database.Database.command`` method method:

.. code-block:: python

  >>> db.command('aggregate', 'things', pipeline=pipeline, explain=True)
  {'ok': 1.0, 'stages': [...]}