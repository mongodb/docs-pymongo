.. _pymongo-geospatial-index:

==================
Geospatial Indexes
==================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :keywords: index, query, optimization, efficiency

Overview
--------

MongoDB supports queries of geospatial coordinate data using **2dsphere indexes**. With a ``2dsphere`` index, you can query
the geospatial data for inclusion, intersection, and proximity. For more information about querying geospatial data, see
:manual:`Geospatial Queries </geospatial-queries/>`.

To create a ``2dsphere`` index, you must specify a field that contains only **GeoJSON objects**. For more details on this
type, see the :manual:`GeoJSON objects </reference/geojson>` guide in the MongoDB
Server manual.

Sample Data
~~~~~~~~~~~

The examples in this guide use the ``sample_mflix.movies`` collection
from the :atlas:`Atlas sample datasets </sample-data>`. To learn how to create a
free MongoDB Atlas cluster and load the sample datasets, see the
:ref:`<pymongo-get-started>`.

The ``location.geo`` field in the following sample document from the ``theaters`` collection in the ``sample_mflix``
database is a GeoJSON Point object that describes the coordinates of the theater:

.. code-block:: javascript

   {
      "_id" : ObjectId("59a47286cfa9a3a73e51e75c"),
      "theaterId" : 104,
      "location" : {
         "address" : {
            "street1" : "5000 W 147th St",
            "city" : "Hawthorne",
            "state" : "CA",
            "zipcode" : "90250"
         },
         "geo" : {
            "type" : "Point",
            "coordinates" : [
               -118.36559,
               33.897167
            ]
         }
      }
   }

Create a Geospatial Index
-------------------------

The following example creates a ``2dsphere`` index on the ``location.geo`` field:

.. literalinclude:: /includes/indexes/indexes.py
   :language: python
   :start-after: start-index-geo
   :end-before: end-index-geo

The following is an example of a geospatial query using the "location.geo" index.

.. literalinclude:: /includes/indexes/indexes.py
   :language: python
   :start-after: start-index-geo-query
   :end-before: end-index-geo-query

MongoDB also supports ``2d`` indexes for calculating distances on a Euclidean plane and for working with the "legacy
coordinate pairs" syntax used in MongoDB 2.2 and earlier. For more information,
see the :manual:`Geospatial Queries guide </geospatial-queries>` in the MongoDB
Server manual.
