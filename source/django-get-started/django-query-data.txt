.. _django-get-started-query:

==================
Query MongoDB Data
==================

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: app, odm, code example

.. procedure::
   :style: connected

   .. step:: Query the users collection for a specified email

      From the same Python shell as the :ref:`django-get-started-create-app`
      step of this tutorial, run the following code to query the 
      ``sample_mflix.users`` collection for a user whose email is 
      ``"jason_momoa@gameofthron.es"``:

      .. code-block:: bash

         Users.objects.filter(email="jason_momoa@gameofthron.es").first()

      This code returns the name of the matching user:

      .. code-block:: bash

         <QuerySet [<Users: Khal Drogo>]>

   .. step:: Query the movies collection for runtime values

      Run the following code to query the ``sample_mflix.movies``
      collection for movies that have a runtime value less than
      10:

      .. code-block:: bash

         Movies.objects.filter(runtime__lt=10)

      This code returns a truncated list of the matching movies:

      .. code-block:: bash

         <QuerySet [<Movies: Winsor McCay, the Famous Cartoonist of the N.Y.
         Herald and His Moving Comics>, <Movies: Steamboat Willie>, <Movies:
         Three Little Pigs>, <Movies: The Band Concert>, <Movies: Who Killed Cock Robin?>,
         <Movies: Dots>, <Movies: The Cat Concerto>, <Movies: Begone Dull Care>,
         <Movies: Mi adorado Juan>, <Movies: Neighbours>, <Movies: A Phantasy>,
         <Movies: Duck Amuck>, <Movies: Duck Dodgers in the 24Ã¨th Century>,
         <Movies: Blinkity Blank>, <Movies: One Froggy Evening>,
         <Movies: What's Opera, Doc?>, <Movies: Lines: Horizontal>,
         <Movies: Il fornaretto di Venezia>, <Movies: Dog Star Man: Part IV>,
         <Movies: Now>, '...(remaining elements truncated)...']>

After completing this step, you can run queries on data stored in 
your MongoDB deployment.