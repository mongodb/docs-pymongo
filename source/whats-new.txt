.. uses changelog.rst

.. _pymongo-whats-new:

==========
What's New
==========

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol


.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: update, new feature, deprecation, upgrade, driver v4.7

Learn what's new in:

* :ref:`Version 4.7 <version-4.7>`

.. _upcoming-breaking-changes:

.. _version-4.7:

What's New in 4.7
-----------------

The {+driver-short+} v4.7 release includes the following new features:

- Added the ``~pymongo.hello.Hello.server_connection_id``,
  ``pymongo.monitoring.CommandStartedEvent.server_connection_id``,
  ``pymongo.monitoring.CommandSucceededEvent.server_connection_id``, and
  ``pymongo.monitoring.CommandFailedEvent.server_connection_id`` properties.
- Added support for named Key Management Service (KMS) providers for Client-Side Field
  Level Encryption (CSFLE).
  Previously supported KMS providers were only: aws, azure, gcp, kmip, and local.
  The KMS provider is now expanded to support name suffixes (e.g. local:myname).
  Named KMS providers enables more than one of each KMS provider type to be configured.
  See the docstring for ``~pymongo.encryption_options.AutoEncryptionOpts``.
  Note that named KMS providers requires pymongocrypt >=1.9 and libmongocrypt >=1.9.
- Improved the performance of encoding BSON documents to JSON.
- The ``~pymongo.encryption.ClientEncryption.encrypt`` method and
  the ``~pymongo.encryption.ClientEncryption.encrypt_expression`` method now allow ``key_id``
  to be passed in as a ``uuid.UUID``.
- Fixed a bug where inflating a ``~bson.raw_bson.RawBSONDocument`` containing a
  ``~bson.code.Code`` would cause an error.
- Fixed a bug in Python 3.12 where the error message
  ``RuntimeError: can't create new thread at interpreter shutdown``
  could be written to ``stderr`` when a ``MongoClient`` thread starts as the Python
  interpreter is shutting down.
- Fixed a bug where ``~bson.int64.Int64`` instances could not always be encoded by
  `orjson <https://github.com/ijl/orjson>`__. Code like the following example now
  run correctly:

.. code-block:: python

   >>> import orjson
   >>> from bson import json_util
   >>> orjson.dumps({'a': Int64(1)}, default=json_util.default, option=orjson.OPT_PASSTHROUGH_SUBCLASS)


Breaking Changes
````````````````

- Replaced usage of ``bson.son.SON`` on all internal classes and commands to dict,
  ``options.pool_options.metadata`` is now of type ``dict`` as opposed to ``bson.son.SON``.
  Here's some examples of how this changes expected output as well as how to convert from ``dict`` to ``bson.son.SON``:

.. code-block:: python

    # Before
    >>> from pymongo import MongoClient
    >>> client = MongoClient()
    >>> client.options.pool_options.metadata
    SON([('driver', SON([('name', 'PyMongo'), ('version', '4.7.0.dev0')])), ('os', SON([('type', 'Darwin'), ('name', 'Darwin'), ('architecture', 'arm64'), ('version', '14.3')])), ('platform', 'CPython 3.11.6.final.0')])

    # After
    >>> client.options.pool_options.metadata
    {'driver': {'name': 'PyMongo', 'version': '4.7.0.dev0'}, 'os': {'type': 'Darwin', 'name': 'Darwin', 'architecture': 'arm64', 'version': '14.3'}, 'platform': 'CPython 3.11.6.final.0'}

    # To convert from dict to SON
    # This will only convert the first layer of the dictionary
    >>> data_as_dict = client.options.pool_options.metadata
    >>> SON(data_as_dict)
    SON([('driver', {'name': 'PyMongo', 'version': '4.7.0.dev0'}), ('os', {'type': 'Darwin', 'name': 'Darwin', 'architecture': 'arm64', 'version': '14.3'}), ('platform', 'CPython 3.11.6.final.0')])

    # To convert from dict to SON on a nested dictionary
    >>> def dict_to_SON(data_as_dict: dict[Any, Any]):
    ...     data_as_SON = SON()
    ...     for key, value in data_as_dict.items():
    ...         data_as_SON[key] = dict_to_SON(value) if isinstance(value, dict) else value
    ...     return data_as_SON
    >>>
    >>> dict_to_SON(data_as_dict)
    SON([('driver', SON([('name', 'PyMongo'), ('version', '4.7.0.dev0')])), ('os', SON([('type', 'Darwin'), ('name', 'Darwin'), ('architecture', 'arm64'), ('version', '14.3')])), ('platform', 'CPython 3.11.6.final.0')])
