.. _pymongo-connect-to-mongodb:

==================
Connect to MongoDB
==================

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: connection string, URI, server, Atlas, settings

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

This guide shows you how to connect to a MongoDB instance or replica set
deployment using {+driver-short+}.

.. _pymongo_connection_uri:

Connection URI
--------------

A **connection URI**, also known as a *connection string*, tells the driver how to
connect to a MongoDB deployment and how to behave while connected.

A standard connection string includes the following pieces:

.. list-table::
   :widths: 20 80
   :header-rows: 1

   * - Piece
     - Description

   * - ``mongodb://``

     - Required. A prefix that identifies this as a string in the
       standard connection format.

   * - ``username:password@``

     - Optional. Authentication credentials. If you include these, the client
       authenticates the user against the database specified in ``authSource``.
       For more information about the ``authSource`` connection option, see
       :ref:`pymongo-auth`. 

   * - ``host[:port]``

     - Required. The host and optional port number where MongoDB is running. If you don't
       include the port number, the driver uses the default port, ``27017``.

   * - ``/defaultauthdb``
     
     - Optional. The authentication database to use if the
       connection string includes ``username:password@``
       authentication credentials but not the ``authSource`` option. If you don't include 
       this piece, the client authenticates the user against the ``admin`` database.

   * - ``?<options>``

     - Optional. A query string that specifies connection-specific
       options as ``<name>=<value>`` pairs. See
       :ref:`pymongo-connection-options` for a full description of
       these options.

To use a connection URI, pass it as a string to the ``MongoClient`` constructor. In the 
following example, the driver uses a sample connection URI to connect to a MongoDB 
instance on port ``27017`` of ``localhost``: 

.. literalinclude:: /includes/connect/local_connection.py
   :language: python
   :start-after: # start local connection
   :end-before: # end local connection

.. tip:: Reusing Your Client

   Because each ``MongoClient`` object represents a pool of connections to the
   database, most applications require only a single instance of
   ``MongoClient``, even across multiple requests. However, if you fork
   a process, the child process *does* need its own ``MongoClient`` object.
   To learn more, see the :ref:`FAQ <pymongo-faq>` page.

For more information about creating a connection string, see
:manual:`Connection Strings </reference/connection-string?tck=docs_driver_python>` in the
MongoDB Server documentation.

Other Connection Targets
------------------------

Connect to Atlas
~~~~~~~~~~~~~~~~

To connect to a MongoDB deployment on Atlas, include the following elements
in your connection string:

- URL of your Atlas cluster
- MongoDB username
- MongoDB password

Then, pass this connection string to the ``MongoClient`` constructor.

.. tip::

   Follow the :atlas:`Atlas driver connection guide </driver-connection?tck=docs_driver_python>`
   to retrieve your connection string.

When you connect to Atlas, we recommend using the {+stable-api+} client option to avoid
breaking changes when Atlas upgrades to a new version of MongoDB Server.
To learn more about the {+stable-api+} feature, see the :ref:`{+stable-api+} page
<pymongo-stable-api>`.

The following code shows how to use {+driver-short+} to connect to an Atlas cluster. The
code also uses the ``server_api`` option to specify a {+stable-api+} version.

.. literalinclude:: /includes/connect/atlas_connection.py
   :language: python
   :start-after: # start atlas connection
   :end-before: # end atlas connection


Connect to a Replica Set
~~~~~~~~~~~~~~~~~~~~~~~~

To connect to a replica set deployment, specify the hostnames (or IP addresses) and 
port numbers of the members of the replica set.

If you aren't able to provide a full list of hosts in the replica set, you can 
specify one or more of the hosts in the replica set and instruct {+driver-short+} to 
perform automatic discovery in one of the following ways:

- Specify the name of the replica set as the value of the ``replicaSet`` parameter.
- Specify ``false`` as the value of the ``directConnection`` parameter.
- Specify more than one host in the replica set.

In the following example, the driver uses a sample connection URI to connect to the 
MongoDB replica set ``sampleRS``, which is running on port ``27017`` of three different
hosts, including ``sample.host1``:

.. literalinclude:: /includes/connect/replica_set_connection.py
   :language: python
   :start-after: # start replica set connection
   :end-before: # end replica set connection