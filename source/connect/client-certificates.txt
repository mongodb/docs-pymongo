.. _pymongo-client-certificates:

=============================
Configure Client Certificates 
=============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: security, authentication, transport layer security, tls, ssl, validate, verify

Overview
--------

Some MongoDB deployments require every connecting application to present a client certificate
that proves its identity. This guide explains how to include
a client certificate when using {+driver-short+} to connect to MongoDB.

To learn more about the connection options in this guide,
see the
`mongo_client <https://pymongo.readthedocs.io/en/latest/api/pymongo/mongo_client.html>`__
API documentation. To learn more about configuring MongoDB to require a client
certificate, see the
:manual:` MongoDB Server documentation. </tutorial/configure-ssl/#set-up-mongod-and-mongos-with-client-certificate-validation>`

Present a Client Certificate
----------------------------

As part of the TLS handshake, {+driver-short+} can present an X.509 client certificate to
the server. To specify the client certificate for the driver to present,
set the ``tlsCertificateKeyFile`` option to the file path of the ``.pem`` file that
contains your certificate and private key.
You can do this in two ways: by passing an argument to the
``MongoClient`` constructor or through a parameter in your connection string.

.. tabs::

   .. tab:: MongoClient
      :tabid: mongoclient

      .. code-block:: python

         client = pymongo.MongoClient("mongodb://<username>:<password>@<hostname@:<port>",
                                      tls=True,
                                      tlsCertificateKeyFile='/path/to/client.pem')

   .. tab:: Connection String
      :tabid: connectionstring

      .. code-block:: python

         uri = "mongodb://<username>:<password>@<hostname@:<port>/?tls=true&tlsCertificateKeyFile=path/to/client.pem"
         client = pymongo.MongoClient(uri)

.. important::
   
   Your client certificate and private key must be in the same ``.pem`` file. If they
   are stored in different files, you must concatenate them. The following example
   shows how to concatenate a key file and a certificate file into a third file called
   ``combined.pem`` on a Unix system: 

   .. code-block:: sh

      $ cat key.pem cert.pem > combined.pem

Provide a Key Password
~~~~~~~~~~~~~~~~~~~~~~

If the private key in your certificate file is encrypted, you must provide a password. To
do so, use the ``tlsCertificateKeyFile`` connection option to specify the password or
passphrase for the encrypted private key. 
You can do this in two ways: by passing an argument to the
``MongoClient`` constructor or through a parameter in your connection string.

.. tabs::

   .. tab:: MongoClient
      :tabid: mongoclient

      .. code-block:: python

         client = pymongo.MongoClient("mongodb://<username>:<password>@<hostname@:<port>",
                                tls=True,
                                tlsCertificateKeyFile='/path/to/client.pem',
                                tlsCertificateKeyFilePassword=<passphrase>)

   .. tab:: Connection String
      :tabid: connectionstring

      .. code-block:: python

         uri = "mongodb://example.com/?tls=true&tlsCAFile=/path/to/ca.pem"
         client = pymongo.MongoClient(uri)